package tree

import (
	"bytes"
	"encoding/hex"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestLeaf_Hash(t *testing.T) {
	leaf := &Leaf{
		Prefix: []byte{
			0x0, 0xf, 0xe, 0x8, 0x3, 0x2, 0x5, 0x8, 0x1, 0xb, 0xf, 0x6, 0xa, 0x0, 0x8, 0x9, 0x2, 0x4, 0x1, 0x2,
			0xa, 0xc, 0xf, 0xb, 0x9, 0x6, 0x5, 0x1, 0xb, 0x4, 0x5, 0x1, 0xc, 0x5, 0x0, 0x9, 0x8, 0x3, 0x1, 0xd,
		},
		Value: []byte{
			0x00, 0x00, 0x00, 0x00, 0x05, 0xdb, 0xf2, 0xa5, 0x47,
		},
	}
	var buf bytes.Buffer
	leaf.MarshalTo(&buf)
	assert.Equal(t,
		"ff28306665383332353831626636613038393234313261636662393635316234353163353039383331640000000005dbf2a547",
		hex.EncodeToString(buf.Bytes()))
	hash := leaf.Hash()
	assert.Equal(t,
		"acd4a1f45c7f608ccc02aef3c7b0dbc7226b0e9c365fa21771df4ce9f44780e6",
		hex.EncodeToString(hash[:]))
}
